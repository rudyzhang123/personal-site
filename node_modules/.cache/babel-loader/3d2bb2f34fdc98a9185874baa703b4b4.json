{"ast":null,"code":"'use strict';\n\nvar hasOwnProperty = require('../constant/has-own-property.js');\n\nvar chunkedSplice = require('./chunked-splice.js');\n\nvar miniflat = require('./miniflat.js');\n\nfunction combineExtensions(extensions) {\n  var all = {};\n  var index = -1;\n\n  while (++index < extensions.length) {\n    extension(all, extensions[index]);\n  }\n\n  return all;\n}\n\nfunction extension(all, extension) {\n  var hook;\n  var left;\n  var right;\n  var code;\n\n  for (hook in extension) {\n    left = hasOwnProperty.call(all, hook) ? all[hook] : all[hook] = {};\n    right = extension[hook];\n\n    for (code in right) {\n      left[code] = constructs(miniflat(right[code]), hasOwnProperty.call(left, code) ? left[code] : []);\n    }\n  }\n}\n\nfunction constructs(list, existing) {\n  var index = -1;\n  var before = [];\n\n  while (++index < list.length) {\n    ;\n    (list[index].add === 'after' ? existing : before).push(list[index]);\n  }\n\n  chunkedSplice(existing, 0, 0, before);\n  return existing;\n}\n\nmodule.exports = combineExtensions;","map":{"version":3,"names":["hasOwnProperty","require","chunkedSplice","miniflat","combineExtensions","extensions","all","index","length","extension","hook","left","right","code","call","constructs","list","existing","before","add","push","module","exports"],"sources":["/Users/zhangruikai/Desktop/rudyzhang123.github.io/node_modules/micromark/dist/util/combine-extensions.js"],"sourcesContent":["'use strict'\n\nvar hasOwnProperty = require('../constant/has-own-property.js')\nvar chunkedSplice = require('./chunked-splice.js')\nvar miniflat = require('./miniflat.js')\n\nfunction combineExtensions(extensions) {\n  var all = {}\n  var index = -1\n\n  while (++index < extensions.length) {\n    extension(all, extensions[index])\n  }\n\n  return all\n}\n\nfunction extension(all, extension) {\n  var hook\n  var left\n  var right\n  var code\n\n  for (hook in extension) {\n    left = hasOwnProperty.call(all, hook) ? all[hook] : (all[hook] = {})\n    right = extension[hook]\n\n    for (code in right) {\n      left[code] = constructs(\n        miniflat(right[code]),\n        hasOwnProperty.call(left, code) ? left[code] : []\n      )\n    }\n  }\n}\n\nfunction constructs(list, existing) {\n  var index = -1\n  var before = []\n\n  while (++index < list.length) {\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  chunkedSplice(existing, 0, 0, before)\n  return existing\n}\n\nmodule.exports = combineExtensions\n"],"mappings":"AAAA;;AAEA,IAAIA,cAAc,GAAGC,OAAO,CAAC,iCAAD,CAA5B;;AACA,IAAIC,aAAa,GAAGD,OAAO,CAAC,qBAAD,CAA3B;;AACA,IAAIE,QAAQ,GAAGF,OAAO,CAAC,eAAD,CAAtB;;AAEA,SAASG,iBAAT,CAA2BC,UAA3B,EAAuC;EACrC,IAAIC,GAAG,GAAG,EAAV;EACA,IAAIC,KAAK,GAAG,CAAC,CAAb;;EAEA,OAAO,EAAEA,KAAF,GAAUF,UAAU,CAACG,MAA5B,EAAoC;IAClCC,SAAS,CAACH,GAAD,EAAMD,UAAU,CAACE,KAAD,CAAhB,CAAT;EACD;;EAED,OAAOD,GAAP;AACD;;AAED,SAASG,SAAT,CAAmBH,GAAnB,EAAwBG,SAAxB,EAAmC;EACjC,IAAIC,IAAJ;EACA,IAAIC,IAAJ;EACA,IAAIC,KAAJ;EACA,IAAIC,IAAJ;;EAEA,KAAKH,IAAL,IAAaD,SAAb,EAAwB;IACtBE,IAAI,GAAGX,cAAc,CAACc,IAAf,CAAoBR,GAApB,EAAyBI,IAAzB,IAAiCJ,GAAG,CAACI,IAAD,CAApC,GAA8CJ,GAAG,CAACI,IAAD,CAAH,GAAY,EAAjE;IACAE,KAAK,GAAGH,SAAS,CAACC,IAAD,CAAjB;;IAEA,KAAKG,IAAL,IAAaD,KAAb,EAAoB;MAClBD,IAAI,CAACE,IAAD,CAAJ,GAAaE,UAAU,CACrBZ,QAAQ,CAACS,KAAK,CAACC,IAAD,CAAN,CADa,EAErBb,cAAc,CAACc,IAAf,CAAoBH,IAApB,EAA0BE,IAA1B,IAAkCF,IAAI,CAACE,IAAD,CAAtC,GAA+C,EAF1B,CAAvB;IAID;EACF;AACF;;AAED,SAASE,UAAT,CAAoBC,IAApB,EAA0BC,QAA1B,EAAoC;EAClC,IAAIV,KAAK,GAAG,CAAC,CAAb;EACA,IAAIW,MAAM,GAAG,EAAb;;EAEA,OAAO,EAAEX,KAAF,GAAUS,IAAI,CAACR,MAAtB,EAA8B;IAC5B;IAAC,CAACQ,IAAI,CAACT,KAAD,CAAJ,CAAYY,GAAZ,KAAoB,OAApB,GAA8BF,QAA9B,GAAyCC,MAA1C,EAAkDE,IAAlD,CAAuDJ,IAAI,CAACT,KAAD,CAA3D;EACF;;EAEDL,aAAa,CAACe,QAAD,EAAW,CAAX,EAAc,CAAd,EAAiBC,MAAjB,CAAb;EACA,OAAOD,QAAP;AACD;;AAEDI,MAAM,CAACC,OAAP,GAAiBlB,iBAAjB"},"metadata":{},"sourceType":"script"}