{"ast":null,"code":"'use strict';\n\nvar decodeEntity = require('parse-entities/decode-entity.js');\n\nvar asciiAlphanumeric = require('../character/ascii-alphanumeric.js');\n\nvar asciiDigit = require('../character/ascii-digit.js');\n\nvar asciiHexDigit = require('../character/ascii-hex-digit.js');\n\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {\n    default: e\n  };\n}\n\nvar decodeEntity__default = /*#__PURE__*/_interopDefaultLegacy(decodeEntity);\n\nvar characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n};\n\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  var self = this;\n  var size = 0;\n  var max;\n  var test;\n  return start;\n\n  function start(code) {\n    effects.enter('characterReference');\n    effects.enter('characterReferenceMarker');\n    effects.consume(code);\n    effects.exit('characterReferenceMarker');\n    return open;\n  }\n\n  function open(code) {\n    if (code === 35) {\n      effects.enter('characterReferenceMarkerNumeric');\n      effects.consume(code);\n      effects.exit('characterReferenceMarkerNumeric');\n      return numeric;\n    }\n\n    effects.enter('characterReferenceValue');\n    max = 31;\n    test = asciiAlphanumeric;\n    return value(code);\n  }\n\n  function numeric(code) {\n    if (code === 88 || code === 120) {\n      effects.enter('characterReferenceMarkerHexadecimal');\n      effects.consume(code);\n      effects.exit('characterReferenceMarkerHexadecimal');\n      effects.enter('characterReferenceValue');\n      max = 6;\n      test = asciiHexDigit;\n      return value;\n    }\n\n    effects.enter('characterReferenceValue');\n    max = 7;\n    test = asciiDigit;\n    return value(code);\n  }\n\n  function value(code) {\n    var token;\n\n    if (code === 59 && size) {\n      token = effects.exit('characterReferenceValue');\n\n      if (test === asciiAlphanumeric && !decodeEntity__default['default'](self.sliceSerialize(token))) {\n        return nok(code);\n      }\n\n      effects.enter('characterReferenceMarker');\n      effects.consume(code);\n      effects.exit('characterReferenceMarker');\n      effects.exit('characterReference');\n      return ok;\n    }\n\n    if (test(code) && size++ < max) {\n      effects.consume(code);\n      return value;\n    }\n\n    return nok(code);\n  }\n}\n\nmodule.exports = characterReference;","map":{"version":3,"names":["decodeEntity","require","asciiAlphanumeric","asciiDigit","asciiHexDigit","_interopDefaultLegacy","e","default","decodeEntity__default","characterReference","name","tokenize","tokenizeCharacterReference","effects","ok","nok","self","size","max","test","start","code","enter","consume","exit","open","numeric","value","token","sliceSerialize","module","exports"],"sources":["/Users/zhangruikai/Desktop/rudyzhang123.github.io/node_modules/micromark/dist/tokenize/character-reference.js"],"sourcesContent":["'use strict'\n\nvar decodeEntity = require('parse-entities/decode-entity.js')\nvar asciiAlphanumeric = require('../character/ascii-alphanumeric.js')\nvar asciiDigit = require('../character/ascii-digit.js')\nvar asciiHexDigit = require('../character/ascii-hex-digit.js')\n\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {default: e}\n}\n\nvar decodeEntity__default = /*#__PURE__*/ _interopDefaultLegacy(decodeEntity)\n\nvar characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n}\n\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  var self = this\n  var size = 0\n  var max\n  var test\n  return start\n\n  function start(code) {\n    effects.enter('characterReference')\n    effects.enter('characterReferenceMarker')\n    effects.consume(code)\n    effects.exit('characterReferenceMarker')\n    return open\n  }\n\n  function open(code) {\n    if (code === 35) {\n      effects.enter('characterReferenceMarkerNumeric')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerNumeric')\n      return numeric\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 31\n    test = asciiAlphanumeric\n    return value(code)\n  }\n\n  function numeric(code) {\n    if (code === 88 || code === 120) {\n      effects.enter('characterReferenceMarkerHexadecimal')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerHexadecimal')\n      effects.enter('characterReferenceValue')\n      max = 6\n      test = asciiHexDigit\n      return value\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 7\n    test = asciiDigit\n    return value(code)\n  }\n\n  function value(code) {\n    var token\n\n    if (code === 59 && size) {\n      token = effects.exit('characterReferenceValue')\n\n      if (\n        test === asciiAlphanumeric &&\n        !decodeEntity__default['default'](self.sliceSerialize(token))\n      ) {\n        return nok(code)\n      }\n\n      effects.enter('characterReferenceMarker')\n      effects.consume(code)\n      effects.exit('characterReferenceMarker')\n      effects.exit('characterReference')\n      return ok\n    }\n\n    if (test(code) && size++ < max) {\n      effects.consume(code)\n      return value\n    }\n\n    return nok(code)\n  }\n}\n\nmodule.exports = characterReference\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}