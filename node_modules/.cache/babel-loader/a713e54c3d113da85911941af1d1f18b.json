{"ast":null,"code":"'use strict';\n\nvar asciiAlphanumeric = require('../character/ascii-alphanumeric.js');\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js');\n\nvar markdownSpace = require('../character/markdown-space.js');\n\nvar factorySpace = require('./factory-space.js');\n\nvar markdownLineEndingOrSpace = require('../character/markdown-line-ending-or-space.js');\n\nvar asciiAlpha = require('../character/ascii-alpha.js');\n\nvar htmlText = {\n  name: 'htmlText',\n  tokenize: tokenizeHtmlText\n};\n\nfunction tokenizeHtmlText(effects, ok, nok) {\n  var self = this;\n  var marker;\n  var buffer;\n  var index;\n  var returnState;\n  return start;\n\n  function start(code) {\n    effects.enter('htmlText');\n    effects.enter('htmlTextData');\n    effects.consume(code);\n    return open;\n  }\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code);\n      return declarationOpen;\n    }\n\n    if (code === 47) {\n      effects.consume(code);\n      return tagCloseStart;\n    }\n\n    if (code === 63) {\n      effects.consume(code);\n      return instruction;\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return tagOpen;\n    }\n\n    return nok(code);\n  }\n\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return commentOpen;\n    }\n\n    if (code === 91) {\n      effects.consume(code);\n      buffer = 'CDATA[';\n      index = 0;\n      return cdataOpen;\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return declaration;\n    }\n\n    return nok(code);\n  }\n\n  function commentOpen(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return commentStart;\n    }\n\n    return nok(code);\n  }\n\n  function commentStart(code) {\n    if (code === null || code === 62) {\n      return nok(code);\n    }\n\n    if (code === 45) {\n      effects.consume(code);\n      return commentStartDash;\n    }\n\n    return comment(code);\n  }\n\n  function commentStartDash(code) {\n    if (code === null || code === 62) {\n      return nok(code);\n    }\n\n    return comment(code);\n  }\n\n  function comment(code) {\n    if (code === null) {\n      return nok(code);\n    }\n\n    if (code === 45) {\n      effects.consume(code);\n      return commentClose;\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = comment;\n      return atLineEnding(code);\n    }\n\n    effects.consume(code);\n    return comment;\n  }\n\n  function commentClose(code) {\n    if (code === 45) {\n      effects.consume(code);\n      return end;\n    }\n\n    return comment(code);\n  }\n\n  function cdataOpen(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code);\n      return index === buffer.length ? cdata : cdataOpen;\n    }\n\n    return nok(code);\n  }\n\n  function cdata(code) {\n    if (code === null) {\n      return nok(code);\n    }\n\n    if (code === 93) {\n      effects.consume(code);\n      return cdataClose;\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = cdata;\n      return atLineEnding(code);\n    }\n\n    effects.consume(code);\n    return cdata;\n  }\n\n  function cdataClose(code) {\n    if (code === 93) {\n      effects.consume(code);\n      return cdataEnd;\n    }\n\n    return cdata(code);\n  }\n\n  function cdataEnd(code) {\n    if (code === 62) {\n      return end(code);\n    }\n\n    if (code === 93) {\n      effects.consume(code);\n      return cdataEnd;\n    }\n\n    return cdata(code);\n  }\n\n  function declaration(code) {\n    if (code === null || code === 62) {\n      return end(code);\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = declaration;\n      return atLineEnding(code);\n    }\n\n    effects.consume(code);\n    return declaration;\n  }\n\n  function instruction(code) {\n    if (code === null) {\n      return nok(code);\n    }\n\n    if (code === 63) {\n      effects.consume(code);\n      return instructionClose;\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = instruction;\n      return atLineEnding(code);\n    }\n\n    effects.consume(code);\n    return instruction;\n  }\n\n  function instructionClose(code) {\n    return code === 62 ? end(code) : instruction(code);\n  }\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code);\n      return tagClose;\n    }\n\n    return nok(code);\n  }\n\n  function tagClose(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      return tagClose;\n    }\n\n    return tagCloseBetween(code);\n  }\n\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween;\n      return atLineEnding(code);\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return tagCloseBetween;\n    }\n\n    return end(code);\n  }\n\n  function tagOpen(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      return tagOpen;\n    }\n\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code);\n    }\n\n    return nok(code);\n  }\n\n  function tagOpenBetween(code) {\n    if (code === 47) {\n      effects.consume(code);\n      return end;\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code);\n      return tagOpenAttributeName;\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween;\n      return atLineEnding(code);\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return tagOpenBetween;\n    }\n\n    return end(code);\n  }\n\n  function tagOpenAttributeName(code) {\n    if (code === 45 || code === 46 || code === 58 || code === 95 || asciiAlphanumeric(code)) {\n      effects.consume(code);\n      return tagOpenAttributeName;\n    }\n\n    return tagOpenAttributeNameAfter(code);\n  }\n\n  function tagOpenAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code);\n      return tagOpenAttributeValueBefore;\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter;\n      return atLineEnding(code);\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return tagOpenAttributeNameAfter;\n    }\n\n    return tagOpenBetween(code);\n  }\n\n  function tagOpenAttributeValueBefore(code) {\n    if (code === null || code === 60 || code === 61 || code === 62 || code === 96) {\n      return nok(code);\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code);\n      marker = code;\n      return tagOpenAttributeValueQuoted;\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore;\n      return atLineEnding(code);\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code);\n      return tagOpenAttributeValueBefore;\n    }\n\n    effects.consume(code);\n    marker = undefined;\n    return tagOpenAttributeValueUnquoted;\n  }\n\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code);\n      return tagOpenAttributeValueQuotedAfter;\n    }\n\n    if (code === null) {\n      return nok(code);\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted;\n      return atLineEnding(code);\n    }\n\n    effects.consume(code);\n    return tagOpenAttributeValueQuoted;\n  }\n\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (code === 62 || code === 47 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code);\n    }\n\n    return nok(code);\n  }\n\n  function tagOpenAttributeValueUnquoted(code) {\n    if (code === null || code === 34 || code === 39 || code === 60 || code === 61 || code === 96) {\n      return nok(code);\n    }\n\n    if (code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code);\n    }\n\n    effects.consume(code);\n    return tagOpenAttributeValueUnquoted;\n  } // We canâ€™t have blank lines in content, so no need to worry about empty\n  // tokens.\n\n\n  function atLineEnding(code) {\n    effects.exit('htmlTextData');\n    effects.enter('lineEnding');\n    effects.consume(code);\n    effects.exit('lineEnding');\n    return factorySpace(effects, afterPrefix, 'linePrefix', self.parser.constructs.disable.null.indexOf('codeIndented') > -1 ? undefined : 4);\n  }\n\n  function afterPrefix(code) {\n    effects.enter('htmlTextData');\n    return returnState(code);\n  }\n\n  function end(code) {\n    if (code === 62) {\n      effects.consume(code);\n      effects.exit('htmlTextData');\n      effects.exit('htmlText');\n      return ok;\n    }\n\n    return nok(code);\n  }\n}\n\nmodule.exports = htmlText;","map":{"version":3,"names":["asciiAlphanumeric","require","markdownLineEnding","markdownSpace","factorySpace","markdownLineEndingOrSpace","asciiAlpha","htmlText","name","tokenize","tokenizeHtmlText","effects","ok","nok","self","marker","buffer","index","returnState","start","code","enter","consume","open","declarationOpen","tagCloseStart","instruction","tagOpen","commentOpen","cdataOpen","declaration","commentStart","commentStartDash","comment","commentClose","atLineEnding","end","charCodeAt","length","cdata","cdataClose","cdataEnd","instructionClose","tagClose","tagCloseBetween","tagOpenBetween","tagOpenAttributeName","tagOpenAttributeNameAfter","tagOpenAttributeValueBefore","tagOpenAttributeValueQuoted","undefined","tagOpenAttributeValueUnquoted","tagOpenAttributeValueQuotedAfter","exit","afterPrefix","parser","constructs","disable","null","indexOf","module","exports"],"sources":["/Users/zhangruikai/Desktop/rudyzhang123.github.io/node_modules/micromark/dist/tokenize/html-text.js"],"sourcesContent":["'use strict'\n\nvar asciiAlphanumeric = require('../character/ascii-alphanumeric.js')\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar markdownSpace = require('../character/markdown-space.js')\nvar factorySpace = require('./factory-space.js')\nvar markdownLineEndingOrSpace = require('../character/markdown-line-ending-or-space.js')\nvar asciiAlpha = require('../character/ascii-alpha.js')\n\nvar htmlText = {\n  name: 'htmlText',\n  tokenize: tokenizeHtmlText\n}\n\nfunction tokenizeHtmlText(effects, ok, nok) {\n  var self = this\n  var marker\n  var buffer\n  var index\n  var returnState\n  return start\n\n  function start(code) {\n    effects.enter('htmlText')\n    effects.enter('htmlTextData')\n    effects.consume(code)\n    return open\n  }\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationOpen\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instruction\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    return nok(code)\n  }\n\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentOpen\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpen\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return declaration\n    }\n\n    return nok(code)\n  }\n\n  function commentOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentStart\n    }\n\n    return nok(code)\n  }\n\n  function commentStart(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentStartDash\n    }\n\n    return comment(code)\n  }\n\n  function commentStartDash(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    return comment(code)\n  }\n\n  function comment(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = comment\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return comment\n  }\n\n  function commentClose(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return end\n    }\n\n    return comment(code)\n  }\n\n  function cdataOpen(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length ? cdata : cdataOpen\n    }\n\n    return nok(code)\n  }\n\n  function cdata(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = cdata\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return cdata\n  }\n\n  function cdataClose(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n\n  function cdataEnd(code) {\n    if (code === 62) {\n      return end(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n\n  function declaration(code) {\n    if (code === null || code === 62) {\n      return end(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = declaration\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return declaration\n  }\n\n  function instruction(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instructionClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = instruction\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return instruction\n  }\n\n  function instructionClose(code) {\n    return code === 62 ? end(code) : instruction(code)\n  }\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return nok(code)\n  }\n\n  function tagClose(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return tagCloseBetween(code)\n  }\n\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagCloseBetween\n    }\n\n    return end(code)\n  }\n\n  function tagOpen(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n\n  function tagOpenBetween(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return end\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenBetween\n    }\n\n    return end(code)\n  }\n\n  function tagOpenAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    return tagOpenAttributeNameAfter(code)\n  }\n\n  function tagOpenAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeNameAfter\n    }\n\n    return tagOpenBetween(code)\n  }\n\n  function tagOpenAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return tagOpenAttributeValueQuoted\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    effects.consume(code)\n    marker = undefined\n    return tagOpenAttributeValueUnquoted\n  }\n\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return tagOpenAttributeValueQuotedAfter\n    }\n\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueQuoted\n  }\n\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (code === 62 || code === 47 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n\n  function tagOpenAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  } // We canâ€™t have blank lines in content, so no need to worry about empty\n  // tokens.\n\n  function atLineEnding(code) {\n    effects.exit('htmlTextData')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(\n      effects,\n      afterPrefix,\n      'linePrefix',\n      self.parser.constructs.disable.null.indexOf('codeIndented') > -1\n        ? undefined\n        : 4\n    )\n  }\n\n  function afterPrefix(code) {\n    effects.enter('htmlTextData')\n    return returnState(code)\n  }\n\n  function end(code) {\n    if (code === 62) {\n      effects.consume(code)\n      effects.exit('htmlTextData')\n      effects.exit('htmlText')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n\nmodule.exports = htmlText\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}