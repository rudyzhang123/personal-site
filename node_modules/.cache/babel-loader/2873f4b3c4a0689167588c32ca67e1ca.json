{"ast":null,"code":"'use strict';\n\nvar fromCharCode = require('../constant/from-char-code.js');\n\nfunction serializeChunks(chunks) {\n  var index = -1;\n  var result = [];\n  var chunk;\n  var value;\n  var atTab;\n\n  while (++index < chunks.length) {\n    chunk = chunks[index];\n\n    if (typeof chunk === 'string') {\n      value = chunk;\n    } else if (chunk === -5) {\n      value = '\\r';\n    } else if (chunk === -4) {\n      value = '\\n';\n    } else if (chunk === -3) {\n      value = '\\r' + '\\n';\n    } else if (chunk === -2) {\n      value = '\\t';\n    } else if (chunk === -1) {\n      if (atTab) continue;\n      value = ' ';\n    } else {\n      // Currently only replacement character.\n      value = fromCharCode(chunk);\n    }\n\n    atTab = chunk === -2;\n    result.push(value);\n  }\n\n  return result.join('');\n}\n\nmodule.exports = serializeChunks;","map":{"version":3,"names":["fromCharCode","require","serializeChunks","chunks","index","result","chunk","value","atTab","length","push","join","module","exports"],"sources":["/Users/zhangruikai/Desktop/rudyzhang123.github.io/node_modules/micromark/dist/util/serialize-chunks.js"],"sourcesContent":["'use strict'\n\nvar fromCharCode = require('../constant/from-char-code.js')\n\nfunction serializeChunks(chunks) {\n  var index = -1\n  var result = []\n  var chunk\n  var value\n  var atTab\n\n  while (++index < chunks.length) {\n    chunk = chunks[index]\n\n    if (typeof chunk === 'string') {\n      value = chunk\n    } else if (chunk === -5) {\n      value = '\\r'\n    } else if (chunk === -4) {\n      value = '\\n'\n    } else if (chunk === -3) {\n      value = '\\r' + '\\n'\n    } else if (chunk === -2) {\n      value = '\\t'\n    } else if (chunk === -1) {\n      if (atTab) continue\n      value = ' '\n    } else {\n      // Currently only replacement character.\n      value = fromCharCode(chunk)\n    }\n\n    atTab = chunk === -2\n    result.push(value)\n  }\n\n  return result.join('')\n}\n\nmodule.exports = serializeChunks\n"],"mappings":"AAAA;;AAEA,IAAIA,YAAY,GAAGC,OAAO,CAAC,+BAAD,CAA1B;;AAEA,SAASC,eAAT,CAAyBC,MAAzB,EAAiC;EAC/B,IAAIC,KAAK,GAAG,CAAC,CAAb;EACA,IAAIC,MAAM,GAAG,EAAb;EACA,IAAIC,KAAJ;EACA,IAAIC,KAAJ;EACA,IAAIC,KAAJ;;EAEA,OAAO,EAAEJ,KAAF,GAAUD,MAAM,CAACM,MAAxB,EAAgC;IAC9BH,KAAK,GAAGH,MAAM,CAACC,KAAD,CAAd;;IAEA,IAAI,OAAOE,KAAP,KAAiB,QAArB,EAA+B;MAC7BC,KAAK,GAAGD,KAAR;IACD,CAFD,MAEO,IAAIA,KAAK,KAAK,CAAC,CAAf,EAAkB;MACvBC,KAAK,GAAG,IAAR;IACD,CAFM,MAEA,IAAID,KAAK,KAAK,CAAC,CAAf,EAAkB;MACvBC,KAAK,GAAG,IAAR;IACD,CAFM,MAEA,IAAID,KAAK,KAAK,CAAC,CAAf,EAAkB;MACvBC,KAAK,GAAG,OAAO,IAAf;IACD,CAFM,MAEA,IAAID,KAAK,KAAK,CAAC,CAAf,EAAkB;MACvBC,KAAK,GAAG,IAAR;IACD,CAFM,MAEA,IAAID,KAAK,KAAK,CAAC,CAAf,EAAkB;MACvB,IAAIE,KAAJ,EAAW;MACXD,KAAK,GAAG,GAAR;IACD,CAHM,MAGA;MACL;MACAA,KAAK,GAAGP,YAAY,CAACM,KAAD,CAApB;IACD;;IAEDE,KAAK,GAAGF,KAAK,KAAK,CAAC,CAAnB;IACAD,MAAM,CAACK,IAAP,CAAYH,KAAZ;EACD;;EAED,OAAOF,MAAM,CAACM,IAAP,CAAY,EAAZ,CAAP;AACD;;AAEDC,MAAM,CAACC,OAAP,GAAiBX,eAAjB"},"metadata":{},"sourceType":"script"}