{"ast":null,"code":"'use strict';\n\nvar splice = require('../constant/splice.js'); // causes a stack overflow in V8 when trying to insert 100k items for instance.\n\n\nfunction chunkedSplice(list, start, remove, items) {\n  var end = list.length;\n  var chunkStart = 0;\n  var parameters; // Make start between zero and `end` (included).\n\n  if (start < 0) {\n    start = -start > end ? 0 : end + start;\n  } else {\n    start = start > end ? end : start;\n  }\n\n  remove = remove > 0 ? remove : 0; // No need to chunk the items if there’s only a couple (10k) items.\n\n  if (items.length < 10000) {\n    parameters = Array.from(items);\n    parameters.unshift(start, remove);\n    splice.apply(list, parameters);\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) splice.apply(list, [start, remove]); // Insert the items in chunks to not cause stack overflows.\n\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000);\n      parameters.unshift(start, 0);\n      splice.apply(list, parameters);\n      chunkStart += 10000;\n      start += 10000;\n    }\n  }\n}\n\nmodule.exports = chunkedSplice;","map":{"version":3,"names":["splice","require","chunkedSplice","list","start","remove","items","end","length","chunkStart","parameters","Array","from","unshift","apply","slice","module","exports"],"sources":["/Users/zhangruikai/Desktop/rudyzhang123.github.io/node_modules/micromark/dist/util/chunked-splice.js"],"sourcesContent":["'use strict'\n\nvar splice = require('../constant/splice.js')\n\n// causes a stack overflow in V8 when trying to insert 100k items for instance.\n\nfunction chunkedSplice(list, start, remove, items) {\n  var end = list.length\n  var chunkStart = 0\n  var parameters // Make start between zero and `end` (included).\n\n  if (start < 0) {\n    start = -start > end ? 0 : end + start\n  } else {\n    start = start > end ? end : start\n  }\n\n  remove = remove > 0 ? remove : 0 // No need to chunk the items if there’s only a couple (10k) items.\n\n  if (items.length < 10000) {\n    parameters = Array.from(items)\n    parameters.unshift(start, remove)\n    splice.apply(list, parameters)\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) splice.apply(list, [start, remove]) // Insert the items in chunks to not cause stack overflows.\n\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000)\n      parameters.unshift(start, 0)\n      splice.apply(list, parameters)\n      chunkStart += 10000\n      start += 10000\n    }\n  }\n}\n\nmodule.exports = chunkedSplice\n"],"mappings":"AAAA;;AAEA,IAAIA,MAAM,GAAGC,OAAO,CAAC,uBAAD,CAApB,C,CAEA;;;AAEA,SAASC,aAAT,CAAuBC,IAAvB,EAA6BC,KAA7B,EAAoCC,MAApC,EAA4CC,KAA5C,EAAmD;EACjD,IAAIC,GAAG,GAAGJ,IAAI,CAACK,MAAf;EACA,IAAIC,UAAU,GAAG,CAAjB;EACA,IAAIC,UAAJ,CAHiD,CAGlC;;EAEf,IAAIN,KAAK,GAAG,CAAZ,EAAe;IACbA,KAAK,GAAG,CAACA,KAAD,GAASG,GAAT,GAAe,CAAf,GAAmBA,GAAG,GAAGH,KAAjC;EACD,CAFD,MAEO;IACLA,KAAK,GAAGA,KAAK,GAAGG,GAAR,GAAcA,GAAd,GAAoBH,KAA5B;EACD;;EAEDC,MAAM,GAAGA,MAAM,GAAG,CAAT,GAAaA,MAAb,GAAsB,CAA/B,CAXiD,CAWhB;;EAEjC,IAAIC,KAAK,CAACE,MAAN,GAAe,KAAnB,EAA0B;IACxBE,UAAU,GAAGC,KAAK,CAACC,IAAN,CAAWN,KAAX,CAAb;IACAI,UAAU,CAACG,OAAX,CAAmBT,KAAnB,EAA0BC,MAA1B;IACAL,MAAM,CAACc,KAAP,CAAaX,IAAb,EAAmBO,UAAnB;EACD,CAJD,MAIO;IACL;IACA,IAAIL,MAAJ,EAAYL,MAAM,CAACc,KAAP,CAAaX,IAAb,EAAmB,CAACC,KAAD,EAAQC,MAAR,CAAnB,EAFP,CAE2C;;IAEhD,OAAOI,UAAU,GAAGH,KAAK,CAACE,MAA1B,EAAkC;MAChCE,UAAU,GAAGJ,KAAK,CAACS,KAAN,CAAYN,UAAZ,EAAwBA,UAAU,GAAG,KAArC,CAAb;MACAC,UAAU,CAACG,OAAX,CAAmBT,KAAnB,EAA0B,CAA1B;MACAJ,MAAM,CAACc,KAAP,CAAaX,IAAb,EAAmBO,UAAnB;MACAD,UAAU,IAAI,KAAd;MACAL,KAAK,IAAI,KAAT;IACD;EACF;AACF;;AAEDY,MAAM,CAACC,OAAP,GAAiBf,aAAjB"},"metadata":{},"sourceType":"script"}