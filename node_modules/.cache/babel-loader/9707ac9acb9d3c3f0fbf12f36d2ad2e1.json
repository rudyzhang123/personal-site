{"ast":null,"code":"var _jsxFileName = \"/Users/zhangruikai/Desktop/rudyzhang123.github.io/src/App.js\";\nimport React, { Suspense, lazy } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Main from './layouts/Main'; // fallback for lazy pages\n\nimport './static/css/main.scss'; // All of our styles\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  PUBLIC_URL\n} = process.env; // Every route - we lazy load so that each page can be chunked\n// NOTE that some of these chunks are very small. We should optimize\n// which pages are lazy loaded in the future.\n\nconst About = /*#__PURE__*/lazy(_c = () => import('./pages/About'));\n_c2 = About;\nconst Contact = /*#__PURE__*/lazy(_c3 = () => import('./pages/Contact'));\n_c4 = Contact;\nconst Index = /*#__PURE__*/lazy(_c5 = () => import('./pages/Index'));\n_c6 = Index;\nconst NotFound = /*#__PURE__*/lazy(_c7 = () => import('./pages/NotFound'));\n_c8 = NotFound;\nconst Projects = /*#__PURE__*/lazy(_c9 = () => import('./pages/Projects'));\n_c10 = Projects;\nconst Resume = /*#__PURE__*/lazy(_c11 = () => import('./pages/Resume'));\n_c12 = Resume;\nconst Stats = /*#__PURE__*/lazy(_c13 = () => import('./pages/Stats'));\n_c14 = Stats;\n\nconst App = () => /*#__PURE__*/_jsxDEV(BrowserRouter, {\n  basename: PUBLIC_URL,\n  children: /*#__PURE__*/_jsxDEV(Suspense, {\n    fallback: /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 25\n    }, this),\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        component: Index\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/about\",\n        component: About\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/projects\",\n        component: Projects\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/stats\",\n        component: Stats\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/contact\",\n        component: Contact\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/resume\",\n        component: Resume\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        component: NotFound,\n        status: 404\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 20,\n  columnNumber: 3\n}, this);\n\n_c15 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14, _c15;\n\n$RefreshReg$(_c, \"About$lazy\");\n$RefreshReg$(_c2, \"About\");\n$RefreshReg$(_c3, \"Contact$lazy\");\n$RefreshReg$(_c4, \"Contact\");\n$RefreshReg$(_c5, \"Index$lazy\");\n$RefreshReg$(_c6, \"Index\");\n$RefreshReg$(_c7, \"NotFound$lazy\");\n$RefreshReg$(_c8, \"NotFound\");\n$RefreshReg$(_c9, \"Projects$lazy\");\n$RefreshReg$(_c10, \"Projects\");\n$RefreshReg$(_c11, \"Resume$lazy\");\n$RefreshReg$(_c12, \"Resume\");\n$RefreshReg$(_c13, \"Stats$lazy\");\n$RefreshReg$(_c14, \"Stats\");\n$RefreshReg$(_c15, \"App\");","map":{"version":3,"names":["React","Suspense","lazy","BrowserRouter","Switch","Route","Main","PUBLIC_URL","process","env","About","Contact","Index","NotFound","Projects","Resume","Stats","App"],"sources":["/Users/zhangruikai/Desktop/rudyzhang123.github.io/src/App.js"],"sourcesContent":["import React, { Suspense, lazy } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Main from './layouts/Main'; // fallback for lazy pages\nimport './static/css/main.scss'; // All of our styles\n\nconst { PUBLIC_URL } = process.env;\n\n// Every route - we lazy load so that each page can be chunked\n// NOTE that some of these chunks are very small. We should optimize\n// which pages are lazy loaded in the future.\nconst About = lazy(() => import('./pages/About'));\nconst Contact = lazy(() => import('./pages/Contact'));\nconst Index = lazy(() => import('./pages/Index'));\nconst NotFound = lazy(() => import('./pages/NotFound'));\nconst Projects = lazy(() => import('./pages/Projects'));\nconst Resume = lazy(() => import('./pages/Resume'));\nconst Stats = lazy(() => import('./pages/Stats'));\n\nconst App = () => (\n  <BrowserRouter basename={PUBLIC_URL}>\n    <Suspense fallback={<Main />}>\n      <Switch>\n        <Route exact path=\"/\" component={Index} />\n        <Route path=\"/about\" component={About} />\n        <Route path=\"/projects\" component={Projects} />\n        <Route path=\"/stats\" component={Stats} />\n        <Route path=\"/contact\" component={Contact} />\n        <Route path=\"/resume\" component={Resume} />\n        <Route component={NotFound} status={404} />\n      </Switch>\n    </Suspense>\n  </BrowserRouter>\n);\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,IAA1B,QAAsC,OAAtC;AACA,SAASC,aAAT,EAAwBC,MAAxB,EAAgCC,KAAhC,QAA6C,kBAA7C;AACA,OAAOC,IAAP,MAAiB,gBAAjB,C,CAAmC;;AACnC,OAAO,wBAAP,C,CAAiC;;;AAEjC,MAAM;EAAEC;AAAF,IAAiBC,OAAO,CAACC,GAA/B,C,CAEA;AACA;AACA;;AACA,MAAMC,KAAK,gBAAGR,IAAI,MAAC,MAAM,OAAO,eAAP,CAAP,CAAlB;MAAMQ,K;AACN,MAAMC,OAAO,gBAAGT,IAAI,OAAC,MAAM,OAAO,iBAAP,CAAP,CAApB;MAAMS,O;AACN,MAAMC,KAAK,gBAAGV,IAAI,OAAC,MAAM,OAAO,eAAP,CAAP,CAAlB;MAAMU,K;AACN,MAAMC,QAAQ,gBAAGX,IAAI,OAAC,MAAM,OAAO,kBAAP,CAAP,CAArB;MAAMW,Q;AACN,MAAMC,QAAQ,gBAAGZ,IAAI,OAAC,MAAM,OAAO,kBAAP,CAAP,CAArB;OAAMY,Q;AACN,MAAMC,MAAM,gBAAGb,IAAI,QAAC,MAAM,OAAO,gBAAP,CAAP,CAAnB;OAAMa,M;AACN,MAAMC,KAAK,gBAAGd,IAAI,QAAC,MAAM,OAAO,eAAP,CAAP,CAAlB;OAAMc,K;;AAEN,MAAMC,GAAG,GAAG,mBACV,QAAC,aAAD;EAAe,QAAQ,EAAEV,UAAzB;EAAA,uBACE,QAAC,QAAD;IAAU,QAAQ,eAAE,QAAC,IAAD;MAAA;MAAA;MAAA;IAAA,QAApB;IAAA,uBACE,QAAC,MAAD;MAAA,wBACE,QAAC,KAAD;QAAO,KAAK,MAAZ;QAAa,IAAI,EAAC,GAAlB;QAAsB,SAAS,EAAEK;MAAjC;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,QAAC,KAAD;QAAO,IAAI,EAAC,QAAZ;QAAqB,SAAS,EAAEF;MAAhC;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE,QAAC,KAAD;QAAO,IAAI,EAAC,WAAZ;QAAwB,SAAS,EAAEI;MAAnC;QAAA;QAAA;QAAA;MAAA,QAHF,eAIE,QAAC,KAAD;QAAO,IAAI,EAAC,QAAZ;QAAqB,SAAS,EAAEE;MAAhC;QAAA;QAAA;QAAA;MAAA,QAJF,eAKE,QAAC,KAAD;QAAO,IAAI,EAAC,UAAZ;QAAuB,SAAS,EAAEL;MAAlC;QAAA;QAAA;QAAA;MAAA,QALF,eAME,QAAC,KAAD;QAAO,IAAI,EAAC,SAAZ;QAAsB,SAAS,EAAEI;MAAjC;QAAA;QAAA;QAAA;MAAA,QANF,eAOE,QAAC,KAAD;QAAO,SAAS,EAAEF,QAAlB;QAA4B,MAAM,EAAE;MAApC;QAAA;QAAA;QAAA;MAAA,QAPF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA;AADF;EAAA;EAAA;EAAA;AAAA,QADF;;OAAMI,G;AAgBN,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}