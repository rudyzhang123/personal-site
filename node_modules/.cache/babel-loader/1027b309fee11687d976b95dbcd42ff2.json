{"ast":null,"code":"var _jsxFileName = \"/Users/zhangruikai/Desktop/rudyzhang123.github.io/src/components/Contact/EmailLink.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types'; // Validates the first half of an email address.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst validateText = text => {\n  // NOTE: Passes RFC 5322 but not tested on google's standard.\n  // eslint-disable-next-line no-useless-escape\n  const re = /^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))$/;\n  return re.test(text) || text.length === 0;\n};\n\nconst messages = ['hi', 'hello', 'hola', 'you-can-email-me-at-literally-anything! Really', 'well, not anything. But most things', 'like-this', 'or-this', 'but not this :(  ', 'you.can.also.email.me.with.specific.topics.like', 'just-saying-hi', 'please-work-for-us', 'help', 'admin', 'or-I-really-like-your-website', 'thanks'];\n\nconst useInterval = (callback, delay) => {\n  _s();\n\n  const savedCallback = useRef();\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n  useEffect(() => {\n    if (delay) {\n      const id = setInterval(() => {\n        savedCallback.current();\n      }, delay);\n      return () => clearInterval(id);\n    }\n\n    return () => {}; // pass linter\n  }, [delay]);\n};\n\n_s(useInterval, \"dqNZMqbncP+HtqBlD20aSNv0Ugk=\");\n\nconst EmailLink = _ref => {\n  _s2();\n\n  let {\n    loopMessage\n  } = _ref;\n  const hold = 50; // ticks to wait after message is complete before rendering next message\n\n  const delay = 50; // tick length in mS\n\n  const [idx, updateIter] = useState(0); // points to current message\n\n  const [message, updateMessage] = useState(messages[idx]);\n  const [char, updateChar] = useState(0); // points to current char\n\n  const [isActive, setIsActive] = useState(true); // disable when all messages are printed\n\n  useInterval(() => {\n    let newIdx = idx;\n    let newChar = char;\n\n    if (char - hold >= messages[idx].length) {\n      newIdx += 1;\n      newChar = 0;\n    }\n\n    if (newIdx === messages.length) {\n      if (loopMessage) {\n        updateIter(0);\n        updateChar(0);\n      } else {\n        setIsActive(false);\n      }\n    } else {\n      updateMessage(messages[newIdx].slice(0, newChar));\n      updateIter(newIdx);\n      updateChar(newChar + 1);\n    }\n  }, isActive ? delay : null);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"inline-container\",\n    style: validateText(message) ? {} : {\n      color: 'red'\n    },\n    onMouseEnter: () => setIsActive(false),\n    onMouseLeave: () => idx < messages.length && setIsActive(true),\n    children: /*#__PURE__*/_jsxDEV(\"a\", {\n      href: validateText(message) ? `mailto:${message}@mldangelo.com` : '',\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"@mldangelo.com\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(EmailLink, \"DYEnzVPlCuDu3kT5OgXxWZlTWVQ=\", false, function () {\n  return [useInterval];\n});\n\n_c = EmailLink;\nEmailLink.defaultProps = {\n  loopMessage: false\n};\nEmailLink.propTypes = {\n  loopMessage: PropTypes.bool\n};\nexport default EmailLink;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmailLink\");","map":{"version":3,"names":["React","useState","useEffect","useRef","PropTypes","validateText","text","re","test","length","messages","useInterval","callback","delay","savedCallback","current","id","setInterval","clearInterval","EmailLink","loopMessage","hold","idx","updateIter","message","updateMessage","char","updateChar","isActive","setIsActive","newIdx","newChar","slice","color","defaultProps","propTypes","bool"],"sources":["/Users/zhangruikai/Desktop/rudyzhang123.github.io/src/components/Contact/EmailLink.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\n\n// Validates the first half of an email address.\nconst validateText = (text) => {\n  // NOTE: Passes RFC 5322 but not tested on google's standard.\n  // eslint-disable-next-line no-useless-escape\n  const re = /^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))$/;\n  return re.test(text) || text.length === 0;\n};\n\nconst messages = [\n  'hi',\n  'hello',\n  'hola',\n  'you-can-email-me-at-literally-anything! Really',\n  'well, not anything. But most things',\n  'like-this',\n  'or-this',\n  'but not this :(  ',\n  'you.can.also.email.me.with.specific.topics.like',\n  'just-saying-hi',\n  'please-work-for-us',\n  'help',\n  'admin',\n  'or-I-really-like-your-website',\n  'thanks',\n];\n\nconst useInterval = (callback, delay) => {\n  const savedCallback = useRef();\n\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  useEffect(() => {\n    if (delay) {\n      const id = setInterval(() => {\n        savedCallback.current();\n      }, delay);\n      return () => clearInterval(id);\n    }\n    return () => {}; // pass linter\n  }, [delay]);\n};\n\nconst EmailLink = ({ loopMessage }) => {\n  const hold = 50; // ticks to wait after message is complete before rendering next message\n  const delay = 50; // tick length in mS\n\n  const [idx, updateIter] = useState(0); // points to current message\n  const [message, updateMessage] = useState(messages[idx]);\n  const [char, updateChar] = useState(0); // points to current char\n  const [isActive, setIsActive] = useState(true); // disable when all messages are printed\n\n  useInterval(() => {\n    let newIdx = idx;\n    let newChar = char;\n    if (char - hold >= messages[idx].length) {\n      newIdx += 1;\n      newChar = 0;\n    }\n    if (newIdx === messages.length) {\n      if (loopMessage) {\n        updateIter(0);\n        updateChar(0);\n      } else {\n        setIsActive(false);\n      }\n    } else {\n      updateMessage(messages[newIdx].slice(0, newChar));\n      updateIter(newIdx);\n      updateChar(newChar + 1);\n    }\n  }, isActive ? delay : null);\n\n  return (\n    <div\n      className=\"inline-container\"\n      style={validateText(message) ? {} : { color: 'red' }}\n      onMouseEnter={() => setIsActive(false)}\n      onMouseLeave={() => (idx < messages.length) && setIsActive(true)}\n    >\n      <a href={validateText(message) ? `mailto:${message}@mldangelo.com` : ''}>\n        <span>{message}</span>\n        <span>@mldangelo.com</span>\n      </a>\n    </div>\n  );\n};\n\nEmailLink.defaultProps = {\n  loopMessage: false,\n};\n\nEmailLink.propTypes = {\n  loopMessage: PropTypes.bool,\n};\n\nexport default EmailLink;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}