{"ast":null,"code":"'use strict';\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js');\n\nvar markdownSpace = require('../character/markdown-space.js');\n\nvar factorySpace = require('./factory-space.js');\n\nvar thematicBreak = {\n  name: 'thematicBreak',\n  tokenize: tokenizeThematicBreak\n};\n\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  var size = 0;\n  var marker;\n  return start;\n\n  function start(code) {\n    effects.enter('thematicBreak');\n    marker = code;\n    return atBreak(code);\n  }\n\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter('thematicBreakSequence');\n      return sequence(code);\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, atBreak, 'whitespace')(code);\n    }\n\n    if (size < 3 || code !== null && !markdownLineEnding(code)) {\n      return nok(code);\n    }\n\n    effects.exit('thematicBreak');\n    return ok(code);\n  }\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code);\n      size++;\n      return sequence;\n    }\n\n    effects.exit('thematicBreakSequence');\n    return atBreak(code);\n  }\n}\n\nmodule.exports = thematicBreak;","map":{"version":3,"names":["markdownLineEnding","require","markdownSpace","factorySpace","thematicBreak","name","tokenize","tokenizeThematicBreak","effects","ok","nok","size","marker","start","code","enter","atBreak","sequence","exit","consume","module","exports"],"sources":["/Users/zhangruikai/Desktop/rudyzhang123.github.io/node_modules/micromark/dist/tokenize/thematic-break.js"],"sourcesContent":["'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar markdownSpace = require('../character/markdown-space.js')\nvar factorySpace = require('./factory-space.js')\n\nvar thematicBreak = {\n  name: 'thematicBreak',\n  tokenize: tokenizeThematicBreak\n}\n\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  var size = 0\n  var marker\n  return start\n\n  function start(code) {\n    effects.enter('thematicBreak')\n    marker = code\n    return atBreak(code)\n  }\n\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter('thematicBreakSequence')\n      return sequence(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, atBreak, 'whitespace')(code)\n    }\n\n    if (size < 3 || (code !== null && !markdownLineEnding(code))) {\n      return nok(code)\n    }\n\n    effects.exit('thematicBreak')\n    return ok(code)\n  }\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      size++\n      return sequence\n    }\n\n    effects.exit('thematicBreakSequence')\n    return atBreak(code)\n  }\n}\n\nmodule.exports = thematicBreak\n"],"mappings":"AAAA;;AAEA,IAAIA,kBAAkB,GAAGC,OAAO,CAAC,sCAAD,CAAhC;;AACA,IAAIC,aAAa,GAAGD,OAAO,CAAC,gCAAD,CAA3B;;AACA,IAAIE,YAAY,GAAGF,OAAO,CAAC,oBAAD,CAA1B;;AAEA,IAAIG,aAAa,GAAG;EAClBC,IAAI,EAAE,eADY;EAElBC,QAAQ,EAAEC;AAFQ,CAApB;;AAKA,SAASA,qBAAT,CAA+BC,OAA/B,EAAwCC,EAAxC,EAA4CC,GAA5C,EAAiD;EAC/C,IAAIC,IAAI,GAAG,CAAX;EACA,IAAIC,MAAJ;EACA,OAAOC,KAAP;;EAEA,SAASA,KAAT,CAAeC,IAAf,EAAqB;IACnBN,OAAO,CAACO,KAAR,CAAc,eAAd;IACAH,MAAM,GAAGE,IAAT;IACA,OAAOE,OAAO,CAACF,IAAD,CAAd;EACD;;EAED,SAASE,OAAT,CAAiBF,IAAjB,EAAuB;IACrB,IAAIA,IAAI,KAAKF,MAAb,EAAqB;MACnBJ,OAAO,CAACO,KAAR,CAAc,uBAAd;MACA,OAAOE,QAAQ,CAACH,IAAD,CAAf;IACD;;IAED,IAAIZ,aAAa,CAACY,IAAD,CAAjB,EAAyB;MACvB,OAAOX,YAAY,CAACK,OAAD,EAAUQ,OAAV,EAAmB,YAAnB,CAAZ,CAA6CF,IAA7C,CAAP;IACD;;IAED,IAAIH,IAAI,GAAG,CAAP,IAAaG,IAAI,KAAK,IAAT,IAAiB,CAACd,kBAAkB,CAACc,IAAD,CAArD,EAA8D;MAC5D,OAAOJ,GAAG,CAACI,IAAD,CAAV;IACD;;IAEDN,OAAO,CAACU,IAAR,CAAa,eAAb;IACA,OAAOT,EAAE,CAACK,IAAD,CAAT;EACD;;EAED,SAASG,QAAT,CAAkBH,IAAlB,EAAwB;IACtB,IAAIA,IAAI,KAAKF,MAAb,EAAqB;MACnBJ,OAAO,CAACW,OAAR,CAAgBL,IAAhB;MACAH,IAAI;MACJ,OAAOM,QAAP;IACD;;IAEDT,OAAO,CAACU,IAAR,CAAa,uBAAb;IACA,OAAOF,OAAO,CAACF,IAAD,CAAd;EACD;AACF;;AAEDM,MAAM,CAACC,OAAP,GAAiBjB,aAAjB"},"metadata":{},"sourceType":"script"}